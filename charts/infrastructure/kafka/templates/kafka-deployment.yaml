apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafka.fullname" . }}-kafka
  labels:
    {{- include "kafka.labels" . | nindent 4 }}
    app.kubernetes.io/component: kafka
spec:
  replicas: {{ .Values.kafka.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "kafka.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: kafka
  template:
    metadata:
      labels:
        {{- include "kafka.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: kafka
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: kafka
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          image: "{{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}"
          imagePullPolicy: {{ .Values.kafka.image.pullPolicy }}
          ports:
            - name: kafka
              containerPort: {{ .Values.kafka.service.port }}
              protocol: TCP
            - name: kafka-internal
              containerPort: {{ .Values.kafka.service.internalPort }}
              protocol: TCP
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "{{ include "kafka.fullname" . }}-zookeeper:{{ .Values.zookeeper.service.port }}"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://localhost:9092"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:9092"
            - name: KAFKA_BROKER_ID
              value: "{{ .Values.kafka.config.brokerId }}"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "{{ .Values.kafka.config.autoCreateTopics }}"
            - name: KAFKA_DELETE_TOPIC_ENABLE
              value: "{{ .Values.kafka.config.deleteTopicEnable }}"
            - name: KAFKA_LOG_RETENTION_HOURS
              value: "{{ .Values.kafka.config.logRetentionHours }}"
            - name: KAFKA_NUM_PARTITIONS
              value: "{{ .Values.kafka.config.numPartitions }}"
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: "{{ .Values.kafka.config.defaultReplicationFactor }}"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "{{ .Values.kafka.config.offsetsTopicReplicationFactor }}"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "{{ .Values.kafka.config.transactionStateLogReplicationFactor }}"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "{{ .Values.kafka.config.transactionStateLogMinIsr }}"
            - name: KAFKA_HEAP_OPTS
              value: "{{ .Values.kafka.config.heapOpts }}"
          livenessProbe:
            tcpSocket:
              port: {{ .Values.kafka.service.port }}
            initialDelaySeconds: 300
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: {{ .Values.kafka.service.port }}
            initialDelaySeconds: 240
            periodSeconds: 20
            timeoutSeconds: 10
            failureThreshold: 3
          resources:
            {{- toYaml .Values.kafka.resources | nindent 12 }}
          volumeMounts:
            - name: kafka-storage
              mountPath: /var/lib/kafka/data
      volumes:
        - name: kafka-storage
          {{- if .Values.kafka.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "kafka.fullname" . }}-kafka-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}