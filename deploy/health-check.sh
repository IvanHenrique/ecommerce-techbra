#!/bin/bash

# Script de verifica√ß√£o de sa√∫de completa
set -e

NAMESPACE=${1:-techbra-ecommerce}

echo "üè• Verificando sa√∫de do Techbra E-commerce no namespace: $NAMESPACE"

# Verificar se o namespace existe
if ! kubectl get namespace $NAMESPACE &> /dev/null; then
    echo "‚ùå Namespace $NAMESPACE n√£o existe"
    exit 1
fi

echo "üì¶ Verificando pods..."
kubectl get pods -n $NAMESPACE

echo "üîó Verificando services..."
kubectl get services -n $NAMESPACE

echo "üìä Verificando HPA..."
kubectl get hpa -n $NAMESPACE 2>/dev/null || echo "‚ÑπÔ∏è Nenhum HPA configurado"

echo "üíæ Verificando PVCs..."
kubectl get pvc -n $NAMESPACE 2>/dev/null || echo "‚ÑπÔ∏è Nenhum PVC encontrado"

echo "üîê Verificando Network Policies..."
kubectl get networkpolicy -n $NAMESPACE 2>/dev/null || echo "‚ÑπÔ∏è Nenhuma Network Policy encontrada"

# Teste de conectividade dos health checks
echo "ü©∫ Testando health checks..."

services=("order-service:8081" "billing-service:8082" "inventory-service:8083" "bff:8084")

for service in "${services[@]}"; do
    service_name=$(echo $service | cut -d':' -f1)
    port=$(echo $service | cut -d':' -f2)

    echo "  Testando $service_name..."

    if kubectl get service $service_name -n $NAMESPACE &> /dev/null; then
        # Port-forward em background e testar
        kubectl port-forward service/$service_name $port:$port -n $NAMESPACE &
        PF_PID=$!

        sleep 3

        if curl -s "http://localhost:$port/actuator/health" > /dev/null; then
            echo "  ‚úÖ $service_name est√° saud√°vel"
        else
            echo "  ‚ùå $service_name n√£o est√° respondendo"
        fi

        kill $PF_PID 2>/dev/null || true
    else
        echo "  ‚ö†Ô∏è $service_name n√£o encontrado"
    fi
done

echo "‚úÖ Verifica√ß√£o de sa√∫de conclu√≠da!"