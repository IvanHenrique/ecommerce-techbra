spring:
  application:
    name: inventory-service

  profiles:
    active: dev

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka-kafka:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true
    consumer:
      group-id: inventory-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        max.poll.records: 100
        fetch.min.bytes: 1024
    listener:
      concurrency: 3
      ack-mode: batch

server:
  port: 8083

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,resilience4j
  endpoint:
    health:
      show-details: always
    resilience4j:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: inventory-service
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true

# Resilience4j Configuration
resilience4j:
  bulkhead:
    instances:
      inventory-reservation:
        max-concurrent-calls: 10
        max-wait-duration: 5s
      inventory-query:
        max-concurrent-calls: 20
        max-wait-duration: 3s
    
  ratelimiter:
    instances:
      inventory-reservation:
        limit-for-period: 50
        limit-refresh-period: 1m
        timeout-duration: 5s
      inventory-query:
        limit-for-period: 100
        limit-refresh-period: 1m
        timeout-duration: 3s

  circuitbreaker:
    instances:
      inventory-reservation:
        failure-rate-threshold: 50
        minimum-number-of-calls: 10
        sliding-window-size: 20
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 5
        automatic-transition-from-open-to-half-open-enabled: true
      inventory-query:
        failure-rate-threshold: 60
        minimum-number-of-calls: 5
        sliding-window-size: 10
        wait-duration-in-open-state: 15s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true

  retry:
    instances:
      inventory-reservation:
        max-attempts: 3
        wait-duration: 1s
        exponential-backoff-multiplier: 2
        randomization-factor: 0.5
        retry-exceptions:
          - java.lang.RuntimeException
          - java.util.concurrent.TimeoutException
      inventory-query:
        max-attempts: 2
        wait-duration: 500ms
        exponential-backoff-multiplier: 1.5
        randomization-factor: 0.3
        retry-exceptions:
          - java.lang.RuntimeException
          - java.util.concurrent.TimeoutException

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html