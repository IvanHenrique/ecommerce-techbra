spring:
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5

  cache:
    type: redis
    redis:
      time-to-live: 600000 # 10 minutos em prod
      cache-null-values: false

# URLs dos microserviços - Produção
microservices:
  order-service:
    base-url: ${ORDER_SERVICE_URL:http://order-service:8081}
  billing-service:
    base-url: ${BILLING_SERVICE_URL:http://billing-service:8082}
  inventory-service:
    base-url: ${INVENTORY_SERVICE_URL:http://inventory-service:8083}

# Configurações de produção do WebClient
webclient:
  connection-timeout: 3000
  read-timeout: 8000
  write-timeout: 8000

# Configurações de produção do Resilience4j
resilience4j:
  circuitbreaker:
    instances:
      order-service:
        register-health-indicator: true
        sliding-window-size: 20
        minimum-number-of-calls: 10
        permitted-number-of-calls-in-half-open-state: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 60
        event-consumer-buffer-size: 20
      billing-service:
        register-health-indicator: true
        sliding-window-size: 20
        minimum-number-of-calls: 10
        permitted-number-of-calls-in-half-open-state: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 60
        event-consumer-buffer-size: 20
      inventory-service:
        register-health-indicator: true
        sliding-window-size: 20
        minimum-number-of-calls: 10
        permitted-number-of-calls-in-half-open-state: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 60
        event-consumer-buffer-size: 20

  retry:
    instances:
      order-service:
        max-attempts: 2
        wait-duration: 500ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
      billing-service:
        max-attempts: 2
        wait-duration: 500ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
      inventory-service:
        max-attempts: 2
        wait-duration: 500ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2

  timelimiter:
    instances:
      order-service:
        timeout-duration: 2s
        cancel-running-future: true
      billing-service:
        timeout-duration: 2s
        cancel-running-future: true
      inventory-service:
        timeout-duration: 2s
        cancel-running-future: true

logging:
  level:
    com.ecommerce.bff: INFO
    org.springframework.web.reactive: WARN
    io.github.resilience4j: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"